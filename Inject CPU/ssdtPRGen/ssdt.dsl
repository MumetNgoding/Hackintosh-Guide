/*
 * Intel ACPI Component Architecture
 * AML Disassembler version 20140210-00 [Feb 10 2014]
 * Copyright (c) 2000 - 2014 Intel Corporation
 * 
 * Original Table Header:
 *     Signature        "SSDT"
 *     Length           0x0000036A (874)
 *     Revision         0x01
 *     Checksum         0x00
 *     OEM ID           "APPLE "
 *     OEM Table ID     "CpuPm"
 *     OEM Revision     0x00021500 (136448)
 *     Compiler ID      "INTL"
 *     Compiler Version 0x20140210 (538182160)
 */

DefinitionBlock ("ssdt.aml", "SSDT", 1, "APPLE ", "CpuPm", 0x00021500)
{
    External (\_PR_.CPU0, DeviceObj)
    External (\_PR_.CPU1, DeviceObj)
    External (\_PR_.CPU2, DeviceObj)
    External (\_PR_.CPU3, DeviceObj)

    Scope (\_PR_.CPU0)
    {
        Method (_INI, 0, NotSerialized)
        {
            Store ("ssdtPRGen version.....: 21.5 / Mac OS X 10.14.6 (18G103)", Debug)
            Store ("custom mode...........: 0", Debug)
            Store ("host processor........: Intel(R) Core(TM) i3-3217U CPU @ 1.80GHz", Debug)
            Store ("target processor......: i3-3217U", Debug)
            Store ("number of processors..: 1", Debug)
            Store ("baseFrequency.........: 800", Debug)
            Store ("frequency.............: 1800", Debug)
            Store ("busFrequency..........: 100", Debug)
            Store ("logicalCPUs...........: 4", Debug)
            Store ("maximum TDP...........: 17", Debug)
            Store ("packageLength.........: 11", Debug)
            Store ("turboStates...........: 0", Debug)
            Store ("maxTurboFrequency.....: 1800", Debug)
            Store ("CPU Workarounds.......: 3", Debug)
            Store ("machdep.xcpm.mode.....: 0", Debug)
        }

        Name (APLF, One)
        Name (APSN, One)
        Name (APSS, Package (0x0D)
        {
            /* CPU Workaround #1 */
            Package (0x06) { 0x0709, 0x004268, 0x0A, 0x0A, 0x1300, 0x1300 },
            /* High Frequency Modes (non-turbo) */
            Package (0x06) { 0x0708, 0x004268, 0x0A, 0x0A, 0x1200, 0x1200 },
            Package (0x06) { 0x06A4, 0x003E01, 0x0A, 0x0A, 0x1100, 0x1100 },
            Package (0x06) { 0x0640, 0x0039B1, 0x0A, 0x0A, 0x1000, 0x1000 },
            Package (0x06) { 0x05DC, 0x003577, 0x0A, 0x0A, 0x0F00, 0x0F00 },
            Package (0x06) { 0x0578, 0x003153, 0x0A, 0x0A, 0x0E00, 0x0E00 },
            Package (0x06) { 0x0514, 0x002D46, 0x0A, 0x0A, 0x0D00, 0x0D00 },
            Package (0x06) { 0x04B0, 0x00294D, 0x0A, 0x0A, 0x0C00, 0x0C00 },
            Package (0x06) { 0x044C, 0x00256A, 0x0A, 0x0A, 0x0B00, 0x0B00 },
            Package (0x06) { 0x03E8, 0x00219D, 0x0A, 0x0A, 0x0A00, 0x0A00 },
            Package (0x06) { 0x0384, 0x001DE4, 0x0A, 0x0A, 0x0900, 0x0900 },
            /* Low Frequency Mode */
            Package (0x06) { 0x0320, 0x001A41, 0x0A, 0x0A, 0x0800, 0x0800 },
            /* CPU Workaround #2 */
            Package (0x06) { 0x02BC,     Zero, 0x0A, 0x0A, 0x0700, 0x0700 }
        })

        Method (ACST, 0, NotSerialized)
        {
            Store ("Method _PR_.CPU0.ACST Called", Debug)
            Store ("CPU0 C-States    : 29", Debug)

            /* Low Power Modes for CPU0 */
            Return (Package (0x06)
            {
                One,
                0x04,
                Package (0x04)
                {
                    ResourceTemplate ()
                    {
                        Register (FFixedHW,
                            0x01,               // Bit Width
                            0x02,               // Bit Offset
                            0x0000000000000000, // Address
                            0x01,               // Access Size
                            )
                    },
                    One,
                    Zero,
                    0x03E8
                },

                Package (0x04)
                {
                    ResourceTemplate ()
                    {
                        Register (FFixedHW,
                            0x01,               // Bit Width
                            0x02,               // Bit Offset
                            0x0000000000000010, // Address
                            0x03,               // Access Size
                            )
                    },
                    0x03,
                    0xCD,
                    0x01F4
                },

                Package (0x04)
                {
                    ResourceTemplate ()
                    {
                        Register (FFixedHW,
                            0x01,               // Bit Width
                            0x02,               // Bit Offset
                            0x0000000000000020, // Address
                            0x03,               // Access Size
                            )
                    },
                    0x06,
                    0xF5,
                    0x015E
                },

                Package (0x04)
                {
                    ResourceTemplate ()
                    {
                        Register (FFixedHW,
                            0x01,               // Bit Width
                            0x02,               // Bit Offset
                            0x0000000000000030, // Address
                            0x03,               // Access Size
                            )
                    },
                    0x07,
                    0xF5,
                    0xC8
                }
            })
        }

        Method (_DSM, 4, NotSerialized)
        {
            Store ("Method _PR_.CPU0._DSM Called", Debug)

            If (LEqual (Arg2, Zero))
            {
                Return (Buffer (One)
                {
                    0x03
                })
            }

            Return (Package ()
            {
                "plugin-type",
                One,
                //added frequency data
                "cf-frequency-data", 
				Buffer ()
				{
					0x53, 0x53, 0x44, 0x54, 0x41, 0x06, 0x00, 0x00, 0x01, 0x90, 0x41, 0x50, 0x50, 0x4C, 0x45, 0x20, 0x43, 0x70, 0x75, 0x50, 0x6D, 0x00, 0x00, 0x00, 0x00, 0x15, 0x02, 0x00, 0x49, 0x4E, 0x54, 0x4C, 0x27, 0x04, 0x18, 0x20, 0xA0, 0x36, 0x00, 0x15, 0x5C, 0x2E, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x30, 0x06, 0x00, 0x15, 0x5C, 0x2E, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x31, 0x06, 0x00, 0x15, 0x5C, 0x2E, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x32, 0x06, 0x00, 0x15, 0x5C, 0x2E, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x33, 0x06, 0x00, 0x10, 0x42, 0x44, 0x5C, 0x2E, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x30, 0x14, 0x42, 0x22, 0x5F, 0x49, 0x4E, 0x49, 0x00, 0x70, 0x0D, 0x73, 0x73, 0x64, 0x74, 0x50, 0x52, 0x47, 0x65, 0x6E, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x32, 0x31, 0x2E, 0x35, 0x20, 0x2F, 0x20, 0x4D, 0x61, 0x63, 0x20, 0x4F, 0x53, 0x20, 0x58, 0x20, 0x31, 0x30, 0x2E, 0x31, 0x34, 0x2E, 0x36, 0x20, 0x28, 0x31, 0x38, 0x47, 0x31, 0x30, 0x33, 0x29, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x63, 0x75, 0x73, 0x74, 0x6F, 0x6D, 0x20, 0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x30, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x68, 0x6F, 0x73, 0x74, 0x20, 0x70, 0x72, 0x6F, 0x63, 0x65, 0x73, 0x73, 0x6F, 0x72, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x49, 0x6E, 0x74, 0x65, 0x6C, 0x28, 0x52, 0x29, 0x20, 0x43, 0x6F, 0x72, 0x65, 0x28, 0x54, 0x4D, 0x29, 0x20, 0x69, 0x33, 0x2D, 0x33, 0x32, 0x31, 0x37, 0x55, 0x20, 0x43, 0x50, 0x55, 0x20, 0x40, 0x20, 0x31, 0x2E, 0x38, 0x30, 0x47, 0x48, 0x7A, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x70, 0x72, 0x6F, 0x63, 0x65, 0x73, 0x73, 0x6F, 0x72, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x69, 0x33, 0x2D, 0x33, 0x32, 0x31, 0x37, 0x55, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x20, 0x6F, 0x66, 0x20, 0x70, 0x72, 0x6F, 0x63, 0x65, 0x73, 0x73, 0x6F, 0x72, 0x73, 0x2E, 0x2E, 0x3A, 0x20, 0x31, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x62, 0x61, 0x73, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x38, 0x30, 0x30, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x31, 0x38, 0x30, 0x30, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x62, 0x75, 0x73, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x31, 0x30, 0x30, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x6C, 0x6F, 0x67, 0x69, 0x63, 0x61, 0x6C, 0x43, 0x50, 0x55, 0x73, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x34, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x6D, 0x61, 0x78, 0x69, 0x6D, 0x75, 0x6D, 0x20, 0x54, 0x44, 0x50, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x31, 0x37, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x70, 0x61, 0x63, 0x6B, 0x61, 0x67, 0x65, 0x4C, 0x65, 0x6E, 0x67, 0x74, 0x68, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x31, 0x31, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x74, 0x75, 0x72, 0x62, 0x6F, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x30, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x6D, 0x61, 0x78, 0x54, 0x75, 0x72, 0x62, 0x6F, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6E, 0x63, 0x79, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x31, 0x38, 0x30, 0x30, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x43, 0x50, 0x55, 0x20, 0x57, 0x6F, 0x72, 0x6B, 0x61, 0x72, 0x6F, 0x75, 0x6E, 0x64, 0x73, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x33, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x6D, 0x61, 0x63, 0x68, 0x64, 0x65, 0x70, 0x2E, 0x78, 0x63, 0x70, 0x6D, 0x2E, 0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x3A, 0x20, 0x30, 0x00, 0x5B, 0x31, 0x08, 0x41, 0x50, 0x4C, 0x46, 0x01, 0x08, 0x41, 0x50, 0x53, 0x4E, 0x01, 0x08, 0x41, 0x50, 0x53, 0x53, 0x12, 0x48, 0x0F, 0x0D, 0x12, 0x12, 0x06, 0x0B, 0x09, 0x07, 0x0B, 0x68, 0x42, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x13, 0x0B, 0x00, 0x13, 0x12, 0x12, 0x06, 0x0B, 0x08, 0x07, 0x0B, 0x68, 0x42, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x12, 0x0B, 0x00, 0x12, 0x12, 0x12, 0x06, 0x0B, 0xA4, 0x06, 0x0B, 0x01, 0x3E, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x11, 0x0B, 0x00, 0x11, 0x12, 0x12, 0x06, 0x0B, 0x40, 0x06, 0x0B, 0xB1, 0x39, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x10, 0x0B, 0x00, 0x10, 0x12, 0x12, 0x06, 0x0B, 0xDC, 0x05, 0x0B, 0x77, 0x35, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x0F, 0x0B, 0x00, 0x0F, 0x12, 0x12, 0x06, 0x0B, 0x78, 0x05, 0x0B, 0x53, 0x31, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x0E, 0x0B, 0x00, 0x0E, 0x12, 0x12, 0x06, 0x0B, 0x14, 0x05, 0x0B, 0x46, 0x2D, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x0D, 0x0B, 0x00, 0x0D, 0x12, 0x12, 0x06, 0x0B, 0xB0, 0x04, 0x0B, 0x4D, 0x29, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x0C, 0x0B, 0x00, 0x0C, 0x12, 0x12, 0x06, 0x0B, 0x4C, 0x04, 0x0B, 0x6A, 0x25, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x0B, 0x0B, 0x00, 0x0B, 0x12, 0x12, 0x06, 0x0B, 0xE8, 0x03, 0x0B, 0x9D, 0x21, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x0A, 0x0B, 0x00, 0x0A, 0x12, 0x12, 0x06, 0x0B, 0x84, 0x03, 0x0B, 0xE4, 0x1D, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x09, 0x0B, 0x00, 0x09, 0x12, 0x12, 0x06, 0x0B, 0x20, 0x03, 0x0B, 0x41, 0x1A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x08, 0x0B, 0x00, 0x08, 0x12, 0x10, 0x06, 0x0B, 0xBC, 0x02, 0x00, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x07, 0x0B, 0x00, 0x07, 0x14, 0x43, 0x0C, 0x41, 0x43, 0x53, 0x54, 0x00, 0x70, 0x0D, 0x4D, 0x65, 0x74, 0x68, 0x6F, 0x64, 0x20, 0x5F, 0x50, 0x52, 0x5F, 0x2E, 0x43, 0x50, 0x55, 0x30, 0x2E, 0x41, 0x43, 0x53, 0x54, 0x20, 0x43, 0x61, 0x6C, 0x6C, 0x65, 0x64, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x43, 0x50, 0x55, 0x30, 0x20, 0x43, 0x2D, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x20, 0x20, 0x20, 0x20, 0x3A, 0x20, 0x32, 0x39, 0x00, 0x5B, 0x31, 0xA4, 0x12, 0x4F, 0x07, 0x06, 0x01, 0x0A, 0x04, 0x12, 0x1C, 0x04, 0x11, 0x14, 0x0A, 0x11, 0x82, 0x0C, 0x00, 0x7F, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x01, 0x00, 0x0B, 0xE8, 0x03, 0x12, 0x1E, 0x04, 0x11, 0x14, 0x0A, 0x11, 0x82, 0x0C, 0x00, 0x7F, 0x01, 0x02, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x0A, 0x03, 0x0A, 0xCD, 0x0B, 0xF4, 0x01, 0x12, 0x1E, 0x04, 0x11, 0x14, 0x0A, 0x11, 0x82, 0x0C, 0x00, 0x7F, 0x01, 0x02, 0x03, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x0A, 0x06, 0x0A, 0xF5, 0x0B, 0x5E, 0x01, 0x12, 0x1D, 0x04, 0x11, 0x14, 0x0A, 0x11, 0x82, 0x0C, 0x00, 0x7F, 0x01, 0x02, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x0A, 0x07, 0x0A, 0xF5, 0x0A, 0xC8, 0x14, 0x44, 0x04, 0x5F, 0x44, 0x53, 0x4D, 0x04, 0x70, 0x0D, 0x4D, 0x65, 0x74, 0x68, 0x6F, 0x64, 0x20, 0x5F, 0x50, 0x52, 0x5F, 0x2E, 0x43, 0x50, 0x55, 0x30, 0x2E, 0x5F, 0x44, 0x53, 0x4D, 0x20, 0x43, 0x61, 0x6C, 0x6C, 0x65, 0x64, 0x00, 0x5B, 0x31, 0xA0, 0x09, 0x93, 0x6A, 0x00, 0xA4, 0x11, 0x03, 0x01, 0x03, 0xA4, 0x12, 0x10, 0x02, 0x0D, 0x70, 0x6C, 0x75, 0x67, 0x69, 0x6E, 0x2D, 0x74, 0x79, 0x70, 0x65, 0x00, 0x01, 0x10, 0x4A, 0x0E, 0x5C, 0x2E, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x31, 0x14, 0x37, 0x41, 0x50, 0x53, 0x53, 0x00, 0x70, 0x0D, 0x4D, 0x65, 0x74, 0x68, 0x6F, 0x64, 0x20, 0x5F, 0x50, 0x52, 0x5F, 0x2E, 0x43, 0x50, 0x55, 0x31, 0x2E, 0x41, 0x50, 0x53, 0x53, 0x20, 0x43, 0x61, 0x6C, 0x6C, 0x65, 0x64, 0x00, 0x5B, 0x31, 0xA4, 0x5C, 0x2F, 0x03, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x30, 0x41, 0x50, 0x53, 0x53, 0x14, 0x45, 0x0A, 0x41, 0x43, 0x53, 0x54, 0x00, 0x70, 0x0D, 0x4D, 0x65, 0x74, 0x68, 0x6F, 0x64, 0x20, 0x5F, 0x50, 0x52, 0x5F, 0x2E, 0x43, 0x50, 0x55, 0x31, 0x2E, 0x41, 0x43, 0x53, 0x54, 0x20, 0x43, 0x61, 0x6C, 0x6C, 0x65, 0x64, 0x00, 0x5B, 0x31, 0x70, 0x0D, 0x43, 0x50, 0x55, 0x31, 0x20, 0x43, 0x2D, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x20, 0x20, 0x20, 0x20, 0x3A, 0x20, 0x37, 0x00, 0x5B, 0x31, 0xA4, 0x12, 0x42, 0x06, 0x05, 0x01, 0x0A, 0x03, 0x12, 0x1E, 0x04, 0x11, 0x14, 0x0A, 0x11, 0x82, 0x0C, 0x00, 0x7F, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x01, 0x0B, 0xE8, 0x03, 0x0B, 0xE8, 0x03, 0x12, 0x1E, 0x04, 0x11, 0x14, 0x0A, 0x11, 0x82, 0x0C, 0x00, 0x7F, 0x01, 0x02, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x0A, 0x02, 0x0A, 0x94, 0x0B, 0xF4, 0x01, 0x12, 0x1D, 0x04, 0x11, 0x14, 0x0A, 0x11, 0x82, 0x0C, 0x00, 0x7F, 0x01, 0x02, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x0A, 0x03, 0x0A, 0xC6, 0x0A, 0xC8, 0x10, 0x4B, 0x05, 0x5C, 0x2E, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x32, 0x14, 0x37, 0x41, 0x50, 0x53, 0x53, 0x00, 0x70, 0x0D, 0x4D, 0x65, 0x74, 0x68, 0x6F, 0x64, 0x20, 0x5F, 0x50, 0x52, 0x5F, 0x2E, 0x43, 0x50, 0x55, 0x32, 0x2E, 0x41, 0x50, 0x53, 0x53, 0x20, 0x43, 0x61, 0x6C, 0x6C, 0x65, 0x64, 0x00, 0x5B, 0x31, 0xA4, 0x5C, 0x2F, 0x03, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x30, 0x41, 0x50, 0x53, 0x53, 0x14, 0x16, 0x41, 0x43, 0x53, 0x54, 0x00, 0xA4, 0x5C, 0x2F, 0x03, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x31, 0x41, 0x43, 0x53, 0x54, 0x10, 0x4B, 0x05, 0x5C, 0x2E, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x33, 0x14, 0x37, 0x41, 0x50, 0x53, 0x53, 0x00, 0x70, 0x0D, 0x4D, 0x65, 0x74, 0x68, 0x6F, 0x64, 0x20, 0x5F, 0x50, 0x52, 0x5F, 0x2E, 0x43, 0x50, 0x55, 0x33, 0x2E, 0x41, 0x50, 0x53, 0x53, 0x20, 0x43, 0x61, 0x6C, 0x6C, 0x65, 0x64, 0x00, 0x5B, 0x31, 0xA4, 0x5C, 0x2F, 0x03, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x30, 0x41, 0x50, 0x53, 0x53, 0x14, 0x16, 0x41, 0x43, 0x53, 0x54, 0x00, 0xA4, 0x5C, 0x2F, 0x03, 0x5F, 0x50, 0x52, 0x5F, 0x43, 0x50, 0x55, 0x31, 0x41, 0x43, 0x53, 0x54, 
				}
            })
        }
    }

    Scope (\_PR_.CPU1)
    {
        Method (APSS, 0, NotSerialized)
        {
            Store ("Method _PR_.CPU1.APSS Called", Debug)

            Return (\_PR_.CPU0.APSS)
        }

        Method (ACST, 0, NotSerialized)
        {
            Store ("Method _PR_.CPU1.ACST Called", Debug)
            Store ("CPU1 C-States    : 7", Debug)

            /* Low Power Modes for CPU1 */
            Return (Package (0x05)
            {
                One,
                0x03,
                Package (0x04)
                {
                    ResourceTemplate ()
                    {
                        Register (FFixedHW,
                            0x01,               // Bit Width
                            0x02,               // Bit Offset
                            0x0000000000000000, // Address
                            0x01,               // Access Size
                            )
                    },
                    One,
                    0x03E8,
                    0x03E8
                },

                Package (0x04)
                {
                    ResourceTemplate ()
                    {
                        Register (FFixedHW,
                            0x01,               // Bit Width
                            0x02,               // Bit Offset
                            0x0000000000000010, // Address
                            0x03,               // Access Size
                            )
                    },
                    0x02,
                    0x94,
                    0x01F4
                },

                Package (0x04)
                {
                    ResourceTemplate ()
                    {
                        Register (FFixedHW,
                            0x01,               // Bit Width
                            0x02,               // Bit Offset
                            0x0000000000000030, // Address
                            0x03,               // Access Size
                            )
                    },
                    0x03,
                    0xC6,
                    0xC8
                }
            })
        }
    }

    Scope (\_PR_.CPU2)
    {
        Method (APSS, 0, NotSerialized)
        {
            Store ("Method _PR_.CPU2.APSS Called", Debug)

            Return (\_PR_.CPU0.APSS)
        }

        Method (ACST, 0, NotSerialized) { Return (\_PR_.CPU1.ACST ()) }
    }

    Scope (\_PR_.CPU3)
    {
        Method (APSS, 0, NotSerialized)
        {
            Store ("Method _PR_.CPU3.APSS Called", Debug)

            Return (\_PR_.CPU0.APSS)
        }

        Method (ACST, 0, NotSerialized) { Return (\_PR_.CPU1.ACST ()) }
    }
}
